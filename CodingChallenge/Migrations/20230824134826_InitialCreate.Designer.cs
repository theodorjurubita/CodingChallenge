// <auto-generated />
using CodingChallenge.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CodingChallenge.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230824134826_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("CodingChallenge.Domain.Token", b =>
                {
                    b.Property<string>("TokenId")
                        .HasColumnType("TEXT");

                    b.Property<string>("WalletAddress")
                        .HasColumnType("TEXT");

                    b.HasKey("TokenId");

                    b.HasIndex("WalletAddress");

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("CodingChallenge.Domain.Wallet", b =>
                {
                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.HasKey("Address");

                    b.ToTable("Wallets");
                });

            modelBuilder.Entity("CodingChallenge.Domain.Token", b =>
                {
                    b.HasOne("CodingChallenge.Domain.Wallet", "Wallet")
                        .WithMany("Tokens")
                        .HasForeignKey("WalletAddress");

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("CodingChallenge.Domain.Wallet", b =>
                {
                    b.Navigation("Tokens");
                });
#pragma warning restore 612, 618
        }
    }
}
